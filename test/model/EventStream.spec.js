/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JourneyAnalyticsApi);
  }
}(this, function(expect, JourneyAnalyticsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JourneyAnalyticsApi.EventStream();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventStream', function() {
    it('should create an instance of EventStream', function() {
      // uncomment below and update the code to test EventStream
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be.a(JourneyAnalyticsApi.EventStream);
    });

    it('should have the property id (base name: "Id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property groupId (base name: "GroupId")', function() {
      // uncomment below and update the code to test the property groupId
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property dataSourceId (base name: "DataSourceId")', function() {
      // uncomment below and update the code to test the property dataSourceId
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property table (base name: "Table")', function() {
      // uncomment below and update the code to test the property table
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property numRows (base name: "NumRows")', function() {
      // uncomment below and update the code to test the property numRows
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property isFIFO (base name: "IsFIFO")', function() {
      // uncomment below and update the code to test the property isFIFO
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property keys (base name: "Keys")', function() {
      // uncomment below and update the code to test the property keys
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property models (base name: "Models")', function() {
      // uncomment below and update the code to test the property models
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property dDEQueueName (base name: "DDEQueueName")', function() {
      // uncomment below and update the code to test the property dDEQueueName
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property dDESiteId (base name: "DDESiteId")', function() {
      // uncomment below and update the code to test the property dDESiteId
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "CreationDate")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property queueLockId (base name: "QueueLockId")', function() {
      // uncomment below and update the code to test the property queueLockId
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property databaseName (base name: "DatabaseName")', function() {
      // uncomment below and update the code to test the property databaseName
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property dDEClient (base name: "DDEClient")', function() {
      // uncomment below and update the code to test the property dDEClient
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property dDETarget (base name: "DDETarget")', function() {
      // uncomment below and update the code to test the property dDETarget
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "Fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property patterns (base name: "Patterns")', function() {
      // uncomment below and update the code to test the property patterns
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

    it('should have the property queueURL (base name: "QueueURL")', function() {
      // uncomment below and update the code to test the property queueURL
      //var instance = new JourneyAnalyticsApi.EventStream();
      //expect(instance).to.be();
    });

  });

}));
