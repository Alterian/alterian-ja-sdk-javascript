/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JourneyAnalyticsApi);
  }
}(this, function(expect, JourneyAnalyticsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JourneyAnalyticsApi.DatasourcesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DatasourcesApi', function() {
    describe('areDatasourceCampaignsPaused', function() {
      it('should call areDatasourceCampaignsPaused successfully', function(done) {
        //uncomment below and update the code to test areDatasourceCampaignsPaused
        //instance.areDatasourceCampaignsPaused(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('areDatasourceJobsComplete', function() {
      it('should call areDatasourceJobsComplete successfully', function(done) {
        //uncomment below and update the code to test areDatasourceJobsComplete
        //instance.areDatasourceJobsComplete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDataSourceMapping', function() {
      it('should call createDataSourceMapping successfully', function(done) {
        //uncomment below and update the code to test createDataSourceMapping
        //instance.createDataSourceMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDatasource', function() {
      it('should call createDatasource successfully', function(done) {
        //uncomment below and update the code to test createDatasource
        //instance.createDatasource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDataSourceMapping', function() {
      it('should call deleteDataSourceMapping successfully', function(done) {
        //uncomment below and update the code to test deleteDataSourceMapping
        //instance.deleteDataSourceMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDatasource', function() {
      it('should call deleteDatasource successfully', function(done) {
        //uncomment below and update the code to test deleteDatasource
        //instance.deleteDatasource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFieldTransformList', function() {
      it('should call deleteFieldTransformList successfully', function(done) {
        //uncomment below and update the code to test deleteFieldTransformList
        //instance.deleteFieldTransformList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTransform', function() {
      it('should call deleteTransform successfully', function(done) {
        //uncomment below and update the code to test deleteTransform
        //instance.deleteTransform(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableDatasource', function() {
      it('should call disableDatasource successfully', function(done) {
        //uncomment below and update the code to test disableDatasource
        //instance.disableDatasource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableDatasource', function() {
      it('should call enableDatasource successfully', function(done) {
        //uncomment below and update the code to test enableDatasource
        //instance.enableDatasource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportFieldTransformList', function() {
      it('should call exportFieldTransformList successfully', function(done) {
        //uncomment below and update the code to test exportFieldTransformList
        //instance.exportFieldTransformList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataSourceAttributes', function() {
      it('should call getDataSourceAttributes successfully', function(done) {
        //uncomment below and update the code to test getDataSourceAttributes
        //instance.getDataSourceAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataSourceEngineUserName', function() {
      it('should call getDataSourceEngineUserName successfully', function(done) {
        //uncomment below and update the code to test getDataSourceEngineUserName
        //instance.getDataSourceEngineUserName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataSourceItems', function() {
      it('should call getDataSourceItems successfully', function(done) {
        //uncomment below and update the code to test getDataSourceItems
        //instance.getDataSourceItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataSourceMappings', function() {
      it('should call getDataSourceMappings successfully', function(done) {
        //uncomment below and update the code to test getDataSourceMappings
        //instance.getDataSourceMappings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataSourceTypes', function() {
      it('should call getDataSourceTypes successfully', function(done) {
        //uncomment below and update the code to test getDataSourceTypes
        //instance.getDataSourceTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataSourceUsers', function() {
      it('should call getDataSourceUsers successfully', function(done) {
        //uncomment below and update the code to test getDataSourceUsers
        //instance.getDataSourceUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDataSources', function() {
      it('should call getDataSources successfully', function(done) {
        //uncomment below and update the code to test getDataSources
        //instance.getDataSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasource', function() {
      it('should call getDatasource successfully', function(done) {
        //uncomment below and update the code to test getDatasource
        //instance.getDatasource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasourceColumn', function() {
      it('should call getDatasourceColumn successfully', function(done) {
        //uncomment below and update the code to test getDatasourceColumn
        //instance.getDatasourceColumn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasourceColumns', function() {
      it('should call getDatasourceColumns successfully', function(done) {
        //uncomment below and update the code to test getDatasourceColumns
        //instance.getDatasourceColumns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasourceDatabases', function() {
      it('should call getDatasourceDatabases successfully', function(done) {
        //uncomment below and update the code to test getDatasourceDatabases
        //instance.getDatasourceDatabases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasourceFieldTypes', function() {
      it('should call getDatasourceFieldTypes successfully', function(done) {
        //uncomment below and update the code to test getDatasourceFieldTypes
        //instance.getDatasourceFieldTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDatasourceTables', function() {
      it('should call getDatasourceTables successfully', function(done) {
        //uncomment below and update the code to test getDatasourceTables
        //instance.getDatasourceTables(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDecodeList', function() {
      it('should call getDecodeList successfully', function(done) {
        //uncomment below and update the code to test getDecodeList
        //instance.getDecodeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldTransformList', function() {
      it('should call getFieldTransformList successfully', function(done) {
        //uncomment below and update the code to test getFieldTransformList
        //instance.getFieldTransformList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldTransformLists', function() {
      it('should call getFieldTransformLists successfully', function(done) {
        //uncomment below and update the code to test getFieldTransformLists
        //instance.getFieldTransformLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProcessStatus', function() {
      it('should call getProcessStatus successfully', function(done) {
        //uncomment below and update the code to test getProcessStatus
        //instance.getProcessStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTransforms', function() {
      it('should call getTransforms successfully', function(done) {
        //uncomment below and update the code to test getTransforms
        //instance.getTransforms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markDatasourceAsPendingDisable', function() {
      it('should call markDatasourceAsPendingDisable successfully', function(done) {
        //uncomment below and update the code to test markDatasourceAsPendingDisable
        //instance.markDatasourceAsPendingDisable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('pauseDatasourceCampaigns', function() {
      it('should call pauseDatasourceCampaigns successfully', function(done) {
        //uncomment below and update the code to test pauseDatasourceCampaigns
        //instance.pauseDatasourceCampaigns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('refreshDatasource', function() {
      it('should call refreshDatasource successfully', function(done) {
        //uncomment below and update the code to test refreshDatasource
        //instance.refreshDatasource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resumeDatasourceCampaigns', function() {
      it('should call resumeDatasourceCampaigns successfully', function(done) {
        //uncomment below and update the code to test resumeDatasourceCampaigns
        //instance.resumeDatasourceCampaigns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveDecodeList', function() {
      it('should call saveDecodeList successfully', function(done) {
        //uncomment below and update the code to test saveDecodeList
        //instance.saveDecodeList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveFieldTransformList', function() {
      it('should call saveFieldTransformList successfully', function(done) {
        //uncomment below and update the code to test saveFieldTransformList
        //instance.saveFieldTransformList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDataSourceMapping', function() {
      it('should call updateDataSourceMapping successfully', function(done) {
        //uncomment below and update the code to test updateDataSourceMapping
        //instance.updateDataSourceMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDatasource', function() {
      it('should call updateDatasource successfully', function(done) {
        //uncomment below and update the code to test updateDatasource
        //instance.updateDatasource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
