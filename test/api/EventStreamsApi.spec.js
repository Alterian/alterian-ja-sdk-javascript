/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JourneyAnalyticsApi);
  }
}(this, function(expect, JourneyAnalyticsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JourneyAnalyticsApi.EventStreamsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventStreamsApi', function() {
    describe('createChannel', function() {
      it('should call createChannel successfully', function(done) {
        //uncomment below and update the code to test createChannel
        //instance.createChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEventStream', function() {
      it('should call createEventStream successfully', function(done) {
        //uncomment below and update the code to test createEventStream
        //instance.createEventStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createEventStreamGroup', function() {
      it('should call createEventStreamGroup successfully', function(done) {
        //uncomment below and update the code to test createEventStreamGroup
        //instance.createEventStreamGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createIdealisedJourney', function() {
      it('should call createIdealisedJourney successfully', function(done) {
        //uncomment below and update the code to test createIdealisedJourney
        //instance.createIdealisedJourney(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSankeyFavourite', function() {
      it('should call createSankeyFavourite successfully', function(done) {
        //uncomment below and update the code to test createSankeyFavourite
        //instance.createSankeyFavourite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVisualisationFavourite', function() {
      it('should call createVisualisationFavourite successfully', function(done) {
        //uncomment below and update the code to test createVisualisationFavourite
        //instance.createVisualisationFavourite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteChannel', function() {
      it('should call deleteChannel successfully', function(done) {
        //uncomment below and update the code to test deleteChannel
        //instance.deleteChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEventStream', function() {
      it('should call deleteEventStream successfully', function(done) {
        //uncomment below and update the code to test deleteEventStream
        //instance.deleteEventStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEventStreamCustomerColumns', function() {
      it('should call deleteEventStreamCustomerColumns successfully', function(done) {
        //uncomment below and update the code to test deleteEventStreamCustomerColumns
        //instance.deleteEventStreamCustomerColumns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEventStreamCustomerColumnsFromGroup', function() {
      it('should call deleteEventStreamCustomerColumnsFromGroup successfully', function(done) {
        //uncomment below and update the code to test deleteEventStreamCustomerColumnsFromGroup
        //instance.deleteEventStreamCustomerColumnsFromGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteEventStreamGroup', function() {
      it('should call deleteEventStreamGroup successfully', function(done) {
        //uncomment below and update the code to test deleteEventStreamGroup
        //instance.deleteEventStreamGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteIdealisedJourney', function() {
      it('should call deleteIdealisedJourney successfully', function(done) {
        //uncomment below and update the code to test deleteIdealisedJourney
        //instance.deleteIdealisedJourney(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSankeyFavourites', function() {
      it('should call deleteSankeyFavourites successfully', function(done) {
        //uncomment below and update the code to test deleteSankeyFavourites
        //instance.deleteSankeyFavourites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVisualisationFavourites', function() {
      it('should call deleteVisualisationFavourites successfully', function(done) {
        //uncomment below and update the code to test deleteVisualisationFavourites
        //instance.deleteVisualisationFavourites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportEventStreamInteraction', function() {
      it('should call exportEventStreamInteraction successfully', function(done) {
        //uncomment below and update the code to test exportEventStreamInteraction
        //instance.exportEventStreamInteraction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChannels', function() {
      it('should call getChannels successfully', function(done) {
        //uncomment below and update the code to test getChannels
        //instance.getChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventRecords', function() {
      it('should call getEventRecords successfully', function(done) {
        //uncomment below and update the code to test getEventRecords
        //instance.getEventRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventStream', function() {
      it('should call getEventStream successfully', function(done) {
        //uncomment below and update the code to test getEventStream
        //instance.getEventStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventStreamAggregates', function() {
      it('should call getEventStreamAggregates successfully', function(done) {
        //uncomment below and update the code to test getEventStreamAggregates
        //instance.getEventStreamAggregates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventStreamChannels', function() {
      it('should call getEventStreamChannels successfully', function(done) {
        //uncomment below and update the code to test getEventStreamChannels
        //instance.getEventStreamChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventStreamDecodeMappings', function() {
      it('should call getEventStreamDecodeMappings successfully', function(done) {
        //uncomment below and update the code to test getEventStreamDecodeMappings
        //instance.getEventStreamDecodeMappings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventStreamDecodeTargetDiscretes', function() {
      it('should call getEventStreamDecodeTargetDiscretes successfully', function(done) {
        //uncomment below and update the code to test getEventStreamDecodeTargetDiscretes
        //instance.getEventStreamDecodeTargetDiscretes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventStreamDiscreteValues', function() {
      it('should call getEventStreamDiscreteValues successfully', function(done) {
        //uncomment below and update the code to test getEventStreamDiscreteValues
        //instance.getEventStreamDiscreteValues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventStreamModels', function() {
      it('should call getEventStreamModels successfully', function(done) {
        //uncomment below and update the code to test getEventStreamModels
        //instance.getEventStreamModels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventStreams', function() {
      it('should call getEventStreams successfully', function(done) {
        //uncomment below and update the code to test getEventStreams
        //instance.getEventStreams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldTransformationDiscreteValues', function() {
      it('should call getFieldTransformationDiscreteValues successfully', function(done) {
        //uncomment below and update the code to test getFieldTransformationDiscreteValues
        //instance.getFieldTransformationDiscreteValues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldTransformationMappings', function() {
      it('should call getFieldTransformationMappings successfully', function(done) {
        //uncomment below and update the code to test getFieldTransformationMappings
        //instance.getFieldTransformationMappings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getIdealisedJourneys', function() {
      it('should call getIdealisedJourneys successfully', function(done) {
        //uncomment below and update the code to test getIdealisedJourneys
        //instance.getIdealisedJourneys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSankeyFavourites', function() {
      it('should call getSankeyFavourites successfully', function(done) {
        //uncomment below and update the code to test getSankeyFavourites
        //instance.getSankeyFavourites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVisualisationFavourites', function() {
      it('should call getVisualisationFavourites successfully', function(done) {
        //uncomment below and update the code to test getVisualisationFavourites
        //instance.getVisualisationFavourites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryEventStream', function() {
      it('should call queryEventStream successfully', function(done) {
        //uncomment below and update the code to test queryEventStream
        //instance.queryEventStream(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryEventStreamCount', function() {
      it('should call queryEventStreamCount successfully', function(done) {
        //uncomment below and update the code to test queryEventStreamCount
        //instance.queryEventStreamCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryEventStreamInteraction', function() {
      it('should call queryEventStreamInteraction successfully', function(done) {
        //uncomment below and update the code to test queryEventStreamInteraction
        //instance.queryEventStreamInteraction(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('queryEventStreamTransition', function() {
      it('should call queryEventStreamTransition successfully', function(done) {
        //uncomment below and update the code to test queryEventStreamTransition
        //instance.queryEventStreamTransition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runSequencePredictor', function() {
      it('should call runSequencePredictor successfully', function(done) {
        //uncomment below and update the code to test runSequencePredictor
        //instance.runSequencePredictor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateChannel', function() {
      it('should call updateChannel successfully', function(done) {
        //uncomment below and update the code to test updateChannel
        //instance.updateChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateEventStreamFieldTransformLists', function() {
      it('should call updateEventStreamFieldTransformLists successfully', function(done) {
        //uncomment below and update the code to test updateEventStreamFieldTransformLists
        //instance.updateEventStreamFieldTransformLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateIdealisedJourney', function() {
      it('should call updateIdealisedJourney successfully', function(done) {
        //uncomment below and update the code to test updateIdealisedJourney
        //instance.updateIdealisedJourney(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSankeyFavourite', function() {
      it('should call updateSankeyFavourite successfully', function(done) {
        //uncomment below and update the code to test updateSankeyFavourite
        //instance.updateSankeyFavourite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVisualisationFavourite', function() {
      it('should call updateVisualisationFavourite successfully', function(done) {
        //uncomment below and update the code to test updateVisualisationFavourite
        //instance.updateVisualisationFavourite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('upsertEventStreamCustomerColumns', function() {
      it('should call upsertEventStreamCustomerColumns successfully', function(done) {
        //uncomment below and update the code to test upsertEventStreamCustomerColumns
        //instance.upsertEventStreamCustomerColumns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('upsertEventStreamCustomerColumnsToGroup', function() {
      it('should call upsertEventStreamCustomerColumnsToGroup successfully', function(done) {
        //uncomment below and update the code to test upsertEventStreamCustomerColumnsToGroup
        //instance.upsertEventStreamCustomerColumnsToGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
