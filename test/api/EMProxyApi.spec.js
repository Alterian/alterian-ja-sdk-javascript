/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JourneyAnalyticsApi);
  }
}(this, function(expect, JourneyAnalyticsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JourneyAnalyticsApi.EMProxyApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EMProxyApi', function() {
    describe('eMAbortDeployment', function() {
      it('should call eMAbortDeployment successfully', function(done) {
        //uncomment below and update the code to test eMAbortDeployment
        //instance.eMAbortDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMAuthenticate', function() {
      it('should call eMAuthenticate successfully', function(done) {
        //uncomment below and update the code to test eMAuthenticate
        //instance.eMAuthenticate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMDeleteList', function() {
      it('should call eMDeleteList successfully', function(done) {
        //uncomment below and update the code to test eMDeleteList
        //instance.eMDeleteList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetClientGroupUsers', function() {
      it('should call eMGetClientGroupUsers successfully', function(done) {
        //uncomment below and update the code to test eMGetClientGroupUsers
        //instance.eMGetClientGroupUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetClientGroups', function() {
      it('should call eMGetClientGroups successfully', function(done) {
        //uncomment below and update the code to test eMGetClientGroups
        //instance.eMGetClientGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetClientInfo', function() {
      it('should call eMGetClientInfo successfully', function(done) {
        //uncomment below and update the code to test eMGetClientInfo
        //instance.eMGetClientInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetClientSets', function() {
      it('should call eMGetClientSets successfully', function(done) {
        //uncomment below and update the code to test eMGetClientSets
        //instance.eMGetClientSets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetCreative', function() {
      it('should call eMGetCreative successfully', function(done) {
        //uncomment below and update the code to test eMGetCreative
        //instance.eMGetCreative(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetCreativeFields', function() {
      it('should call eMGetCreativeFields successfully', function(done) {
        //uncomment below and update the code to test eMGetCreativeFields
        //instance.eMGetCreativeFields(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetCreatives', function() {
      it('should call eMGetCreatives successfully', function(done) {
        //uncomment below and update the code to test eMGetCreatives
        //instance.eMGetCreatives(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetEMServiceURL', function() {
      it('should call eMGetEMServiceURL successfully', function(done) {
        //uncomment below and update the code to test eMGetEMServiceURL
        //instance.eMGetEMServiceURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetEmailValidationExpression', function() {
      it('should call eMGetEmailValidationExpression successfully', function(done) {
        //uncomment below and update the code to test eMGetEmailValidationExpression
        //instance.eMGetEmailValidationExpression(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetFoldersLazy', function() {
      it('should call eMGetFoldersLazy successfully', function(done) {
        //uncomment below and update the code to test eMGetFoldersLazy
        //instance.eMGetFoldersLazy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetInboundAddresses', function() {
      it('should call eMGetInboundAddresses successfully', function(done) {
        //uncomment below and update the code to test eMGetInboundAddresses
        //instance.eMGetInboundAddresses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetTemplateContent', function() {
      it('should call eMGetTemplateContent successfully', function(done) {
        //uncomment below and update the code to test eMGetTemplateContent
        //instance.eMGetTemplateContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMGetUsers', function() {
      it('should call eMGetUsers successfully', function(done) {
        //uncomment below and update the code to test eMGetUsers
        //instance.eMGetUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMIsSysAdmin', function() {
      it('should call eMIsSysAdmin successfully', function(done) {
        //uncomment below and update the code to test eMIsSysAdmin
        //instance.eMIsSysAdmin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMLogOff', function() {
      it('should call eMLogOff successfully', function(done) {
        //uncomment below and update the code to test eMLogOff
        //instance.eMLogOff(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMPauseDeployment', function() {
      it('should call eMPauseDeployment successfully', function(done) {
        //uncomment below and update the code to test eMPauseDeployment
        //instance.eMPauseDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMPrimaryKeys', function() {
      it('should call eMPrimaryKeys successfully', function(done) {
        //uncomment below and update the code to test eMPrimaryKeys
        //instance.eMPrimaryKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMSetEMServiceURL', function() {
      it('should call eMSetEMServiceURL successfully', function(done) {
        //uncomment below and update the code to test eMSetEMServiceURL
        //instance.eMSetEMServiceURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eMTestEMServiceURL', function() {
      it('should call eMTestEMServiceURL successfully', function(done) {
        //uncomment below and update the code to test eMTestEMServiceURL
        //instance.eMTestEMServiceURL(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
