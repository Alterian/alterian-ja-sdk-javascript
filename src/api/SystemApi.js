/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AUTHChangePasswordDefaultResponse from '../com.alterian.ja.model/AUTHChangePasswordDefaultResponse';
import GetClientSettingsDefaultResponse from '../com.alterian.ja.model/GetClientSettingsDefaultResponse';
import GetDataSourceEngineUserNameDefaultResponse from '../com.alterian.ja.model/GetDataSourceEngineUserNameDefaultResponse';
import UpdateSystemSettingRequest from '../com.alterian.ja.model/UpdateSystemSettingRequest';

/**
* System service.
* @module api/SystemApi
* @version 6.35.0
*/
export default class SystemApi {

    /**
    * Constructs a new SystemApi. 
    * @alias module:api/SystemApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Returns back the system identifier for this CM system
     * Returns back the system identifier for this CM system
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/GetDataSourceEngineUserNameDefaultResponse} and HTTP response
     */
    getSystemIdentifierWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetDataSourceEngineUserNameDefaultResponse;
      return this.apiClient.callApi(
        '/GetSystemIdentifier', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns back the system identifier for this CM system
     * Returns back the system identifier for this CM system
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/GetDataSourceEngineUserNameDefaultResponse}
     */
    getSystemIdentifier() {
      return this.getSystemIdentifierWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns the system settings that are common to all clients
     * Returns the system settings that are common to all clients
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/GetClientSettingsDefaultResponse} and HTTP response
     */
    getSystemSettingsWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetClientSettingsDefaultResponse;
      return this.apiClient.callApi(
        '/GetSystemSettings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns the system settings that are common to all clients
     * Returns the system settings that are common to all clients
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/GetClientSettingsDefaultResponse}
     */
    getSystemSettings() {
      return this.getSystemSettingsWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates one of the system settings (those that are common to all clients)
     * Updates one of the system settings (those that are common to all clients)
     * @param {module:com.alterian.ja.model/UpdateSystemSettingRequest} updateSystemSettingRequest Updates one of the system settings (those that are common to all clients)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse} and HTTP response
     */
    updateSystemSettingWithHttpInfo(updateSystemSettingRequest) {
      let postBody = updateSystemSettingRequest;
      // verify the required parameter 'updateSystemSettingRequest' is set
      if (updateSystemSettingRequest === undefined || updateSystemSettingRequest === null) {
        throw new Error("Missing the required parameter 'updateSystemSettingRequest' when calling updateSystemSetting");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AUTHChangePasswordDefaultResponse;
      return this.apiClient.callApi(
        '/UpdateSystemSetting', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Updates one of the system settings (those that are common to all clients)
     * Updates one of the system settings (those that are common to all clients)
     * @param {module:com.alterian.ja.model/UpdateSystemSettingRequest} updateSystemSettingRequest Updates one of the system settings (those that are common to all clients)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse}
     */
    updateSystemSetting(updateSystemSettingRequest) {
      return this.updateSystemSettingWithHttpInfo(updateSystemSettingRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
