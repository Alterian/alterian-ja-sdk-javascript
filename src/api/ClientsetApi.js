/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AUTHChangePasswordDefaultResponse from '../com.alterian.ja.model/AUTHChangePasswordDefaultResponse';
import AddClientToClientSetRequest from '../com.alterian.ja.model/AddClientToClientSetRequest';
import CreateClientDefaultResponse from '../com.alterian.ja.model/CreateClientDefaultResponse';
import CreateClientSetRequest from '../com.alterian.ja.model/CreateClientSetRequest';
import DeleteClientSetRequest from '../com.alterian.ja.model/DeleteClientSetRequest';
import GetClientSetsDefaultResponse from '../com.alterian.ja.model/GetClientSetsDefaultResponse';
import GetClientSetsRequest from '../com.alterian.ja.model/GetClientSetsRequest';

/**
* Clientset service.
* @module api/ClientsetApi
* @version 6.35.0
*/
export default class ClientsetApi {

    /**
    * Constructs a new ClientsetApi. 
    * @alias module:api/ClientsetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Move a @see(ALClient) from it's current @see(ALClientSet) to another clientset
     * Move a @see(ALClient) from it's current @see(ALClientSet) to another clientset
     * @param {module:com.alterian.ja.model/AddClientToClientSetRequest} addClientToClientSetRequest Move a @see(ALClient) from it's current @see(ALClientSet) to another clientset
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse} and HTTP response
     */
    addClientToClientSetWithHttpInfo(addClientToClientSetRequest) {
      let postBody = addClientToClientSetRequest;
      // verify the required parameter 'addClientToClientSetRequest' is set
      if (addClientToClientSetRequest === undefined || addClientToClientSetRequest === null) {
        throw new Error("Missing the required parameter 'addClientToClientSetRequest' when calling addClientToClientSet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AUTHChangePasswordDefaultResponse;
      return this.apiClient.callApi(
        '/AddClientToClientSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Move a @see(ALClient) from it's current @see(ALClientSet) to another clientset
     * Move a @see(ALClient) from it's current @see(ALClientSet) to another clientset
     * @param {module:com.alterian.ja.model/AddClientToClientSetRequest} addClientToClientSetRequest Move a @see(ALClient) from it's current @see(ALClientSet) to another clientset
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse}
     */
    addClientToClientSet(addClientToClientSetRequest) {
      return this.addClientToClientSetWithHttpInfo(addClientToClientSetRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Create a new @see(ALClientSet) within the system.
     * Create a new @see(ALClientSet) within the system.
     * @param {module:com.alterian.ja.model/CreateClientSetRequest} createClientSetRequest Create a new @see(ALClientSet) within the system.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/CreateClientDefaultResponse} and HTTP response
     */
    createClientSetWithHttpInfo(createClientSetRequest) {
      let postBody = createClientSetRequest;
      // verify the required parameter 'createClientSetRequest' is set
      if (createClientSetRequest === undefined || createClientSetRequest === null) {
        throw new Error("Missing the required parameter 'createClientSetRequest' when calling createClientSet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateClientDefaultResponse;
      return this.apiClient.callApi(
        '/CreateClientSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Create a new @see(ALClientSet) within the system.
     * Create a new @see(ALClientSet) within the system.
     * @param {module:com.alterian.ja.model/CreateClientSetRequest} createClientSetRequest Create a new @see(ALClientSet) within the system.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/CreateClientDefaultResponse}
     */
    createClientSet(createClientSetRequest) {
      return this.createClientSetWithHttpInfo(createClientSetRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Remove the given @see(ALClientSet) from the system. This method will fail if any @see(ALClient) exists within the clientset - i.e. the clientset must be empty before deletion
     * Remove the given @see(ALClientSet) from the system. This method will fail if any @see(ALClient) exists within the clientset - i.e. the clientset must be empty before deletion
     * @param {module:com.alterian.ja.model/DeleteClientSetRequest} deleteClientSetRequest Remove the given @see(ALClientSet) from the system. This method will fail if any @see(ALClient) exists within the clientset - i.e. the clientset must be empty before deletion
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse} and HTTP response
     */
    deleteClientSetWithHttpInfo(deleteClientSetRequest) {
      let postBody = deleteClientSetRequest;
      // verify the required parameter 'deleteClientSetRequest' is set
      if (deleteClientSetRequest === undefined || deleteClientSetRequest === null) {
        throw new Error("Missing the required parameter 'deleteClientSetRequest' when calling deleteClientSet");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AUTHChangePasswordDefaultResponse;
      return this.apiClient.callApi(
        '/DeleteClientSet', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Remove the given @see(ALClientSet) from the system. This method will fail if any @see(ALClient) exists within the clientset - i.e. the clientset must be empty before deletion
     * Remove the given @see(ALClientSet) from the system. This method will fail if any @see(ALClient) exists within the clientset - i.e. the clientset must be empty before deletion
     * @param {module:com.alterian.ja.model/DeleteClientSetRequest} deleteClientSetRequest Remove the given @see(ALClientSet) from the system. This method will fail if any @see(ALClient) exists within the clientset - i.e. the clientset must be empty before deletion
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse}
     */
    deleteClientSet(deleteClientSetRequest) {
      return this.deleteClientSetWithHttpInfo(deleteClientSetRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * List all the clientsets within the system
     * List all the clientsets within the system
     * @param {module:com.alterian.ja.model/GetClientSetsRequest} getClientSetsRequest List all the clientsets within the system
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/GetClientSetsDefaultResponse} and HTTP response
     */
    getClientSetsWithHttpInfo(getClientSetsRequest) {
      let postBody = getClientSetsRequest;
      // verify the required parameter 'getClientSetsRequest' is set
      if (getClientSetsRequest === undefined || getClientSetsRequest === null) {
        throw new Error("Missing the required parameter 'getClientSetsRequest' when calling getClientSets");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetClientSetsDefaultResponse;
      return this.apiClient.callApi(
        '/GetClientSets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * List all the clientsets within the system
     * List all the clientsets within the system
     * @param {module:com.alterian.ja.model/GetClientSetsRequest} getClientSetsRequest List all the clientsets within the system
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/GetClientSetsDefaultResponse}
     */
    getClientSets(getClientSetsRequest) {
      return this.getClientSetsWithHttpInfo(getClientSetsRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
