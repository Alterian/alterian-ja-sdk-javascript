/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AUTHChangePasswordDefaultResponse from '../com.alterian.ja.model/AUTHChangePasswordDefaultResponse';
import CreateWebSpoonDefaultResponse from '../com.alterian.ja.model/CreateWebSpoonDefaultResponse';
import CreateWebSpoonRequest from '../com.alterian.ja.model/CreateWebSpoonRequest';
import DeleteWebSpoonRequest from '../com.alterian.ja.model/DeleteWebSpoonRequest';
import GetDataSourceEngineUserNameDefaultResponse from '../com.alterian.ja.model/GetDataSourceEngineUserNameDefaultResponse';
import GetWebSpoonLoginUrlRequest from '../com.alterian.ja.model/GetWebSpoonLoginUrlRequest';
import ListWebSpoonDefaultResponse from '../com.alterian.ja.model/ListWebSpoonDefaultResponse';
import ListWebSpoonRequest from '../com.alterian.ja.model/ListWebSpoonRequest';

/**
* TemplateBuilder service.
* @module api/TemplateBuilderApi
* @version 6.35.0
*/
export default class TemplateBuilderApi {

    /**
    * Constructs a new TemplateBuilderApi. 
    * @alias module:api/TemplateBuilderApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Creates an instance of Template Builder which will be unique to this system, the brand and user which calls the method.
     * Creates an instance of Template Builder which will be unique to this system, the brand and user which calls the method.
     * @param {module:com.alterian.ja.model/CreateWebSpoonRequest} createWebSpoonRequest Creates an instance of Template Builder which will be unique to this system, the brand and user which calls the method.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/CreateWebSpoonDefaultResponse} and HTTP response
     */
    createWebSpoonWithHttpInfo(createWebSpoonRequest) {
      let postBody = createWebSpoonRequest;
      // verify the required parameter 'createWebSpoonRequest' is set
      if (createWebSpoonRequest === undefined || createWebSpoonRequest === null) {
        throw new Error("Missing the required parameter 'createWebSpoonRequest' when calling createWebSpoon");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateWebSpoonDefaultResponse;
      return this.apiClient.callApi(
        '/CreateWebSpoon', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Creates an instance of Template Builder which will be unique to this system, the brand and user which calls the method.
     * Creates an instance of Template Builder which will be unique to this system, the brand and user which calls the method.
     * @param {module:com.alterian.ja.model/CreateWebSpoonRequest} createWebSpoonRequest Creates an instance of Template Builder which will be unique to this system, the brand and user which calls the method.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/CreateWebSpoonDefaultResponse}
     */
    createWebSpoon(createWebSpoonRequest) {
      return this.createWebSpoonWithHttpInfo(createWebSpoonRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Removes a Template Builder instance
     * Removes a Template Builder instance
     * @param {module:com.alterian.ja.model/DeleteWebSpoonRequest} deleteWebSpoonRequest Removes a Template Builder instance
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse} and HTTP response
     */
    deleteWebSpoonWithHttpInfo(deleteWebSpoonRequest) {
      let postBody = deleteWebSpoonRequest;
      // verify the required parameter 'deleteWebSpoonRequest' is set
      if (deleteWebSpoonRequest === undefined || deleteWebSpoonRequest === null) {
        throw new Error("Missing the required parameter 'deleteWebSpoonRequest' when calling deleteWebSpoon");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AUTHChangePasswordDefaultResponse;
      return this.apiClient.callApi(
        '/DeleteWebSpoon', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Removes a Template Builder instance
     * Removes a Template Builder instance
     * @param {module:com.alterian.ja.model/DeleteWebSpoonRequest} deleteWebSpoonRequest Removes a Template Builder instance
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse}
     */
    deleteWebSpoon(deleteWebSpoonRequest) {
      return this.deleteWebSpoonWithHttpInfo(deleteWebSpoonRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Check to make sure Template Builder is available
     * Check to make sure Template Builder is available
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse} and HTTP response
     */
    getWebSpoonAvailableWithHttpInfo() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AUTHChangePasswordDefaultResponse;
      return this.apiClient.callApi(
        '/GetWebSpoonAvailable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Check to make sure Template Builder is available
     * Check to make sure Template Builder is available
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/AUTHChangePasswordDefaultResponse}
     */
    getWebSpoonAvailable() {
      return this.getWebSpoonAvailableWithHttpInfo()
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get a URL valid for redirecting to the Template Builder instance; note, this will return nothing if the operational status is not \"UP\"
     * Get a URL valid for redirecting to the Template Builder instance; note, this will return nothing if the operational status is not \"UP\"
     * @param {module:com.alterian.ja.model/GetWebSpoonLoginUrlRequest} getWebSpoonLoginUrlRequest Get a URL valid for redirecting to the Template Builder instance; note, this will return nothing if the operational status is not \"UP\"
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/GetDataSourceEngineUserNameDefaultResponse} and HTTP response
     */
    getWebSpoonLoginUrlWithHttpInfo(getWebSpoonLoginUrlRequest) {
      let postBody = getWebSpoonLoginUrlRequest;
      // verify the required parameter 'getWebSpoonLoginUrlRequest' is set
      if (getWebSpoonLoginUrlRequest === undefined || getWebSpoonLoginUrlRequest === null) {
        throw new Error("Missing the required parameter 'getWebSpoonLoginUrlRequest' when calling getWebSpoonLoginUrl");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetDataSourceEngineUserNameDefaultResponse;
      return this.apiClient.callApi(
        '/GetWebSpoonLoginUrl', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get a URL valid for redirecting to the Template Builder instance; note, this will return nothing if the operational status is not \"UP\"
     * Get a URL valid for redirecting to the Template Builder instance; note, this will return nothing if the operational status is not \"UP\"
     * @param {module:com.alterian.ja.model/GetWebSpoonLoginUrlRequest} getWebSpoonLoginUrlRequest Get a URL valid for redirecting to the Template Builder instance; note, this will return nothing if the operational status is not \"UP\"
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/GetDataSourceEngineUserNameDefaultResponse}
     */
    getWebSpoonLoginUrl(getWebSpoonLoginUrlRequest) {
      return this.getWebSpoonLoginUrlWithHttpInfo(getWebSpoonLoginUrlRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns back the Template Builder instances which have been created for this system, brand and user (unique to that combination)
     * Returns back the Template Builder instances which have been created for this system, brand and user (unique to that combination)
     * @param {module:com.alterian.ja.model/ListWebSpoonRequest} listWebSpoonRequest Returns back the Template Builder instances which have been created for this system, brand and user (unique to that combination)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:com.alterian.ja.model/ListWebSpoonDefaultResponse} and HTTP response
     */
    listWebSpoonWithHttpInfo(listWebSpoonRequest) {
      let postBody = listWebSpoonRequest;
      // verify the required parameter 'listWebSpoonRequest' is set
      if (listWebSpoonRequest === undefined || listWebSpoonRequest === null) {
        throw new Error("Missing the required parameter 'listWebSpoonRequest' when calling listWebSpoon");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['TokenAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListWebSpoonDefaultResponse;
      return this.apiClient.callApi(
        '/ListWebSpoon', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Returns back the Template Builder instances which have been created for this system, brand and user (unique to that combination)
     * Returns back the Template Builder instances which have been created for this system, brand and user (unique to that combination)
     * @param {module:com.alterian.ja.model/ListWebSpoonRequest} listWebSpoonRequest Returns back the Template Builder instances which have been created for this system, brand and user (unique to that combination)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:com.alterian.ja.model/ListWebSpoonDefaultResponse}
     */
    listWebSpoon(listWebSpoonRequest) {
      return this.listWebSpoonWithHttpInfo(listWebSpoonRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
