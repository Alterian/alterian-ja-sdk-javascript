/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import APICursor from './APICursor';
import FolderTypes from './FolderTypes';

/**
 * The GetFoldersRequest model module.
 * @module com.alterian.ja.model/GetFoldersRequest
 * @version 6.35.0
 */
class GetFoldersRequest {
    /**
     * Constructs a new <code>GetFoldersRequest</code>.
     * @alias module:com.alterian.ja.model/GetFoldersRequest
     */
    constructor() { 
        
        GetFoldersRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetFoldersRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/GetFoldersRequest} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/GetFoldersRequest} The populated <code>GetFoldersRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetFoldersRequest();

            if (data.hasOwnProperty('Cursor')) {
                obj['Cursor'] = APICursor.constructFromObject(data['Cursor']);
            }
            if (data.hasOwnProperty('FolderType')) {
                obj['FolderType'] = FolderTypes.constructFromObject(data['FolderType']);
            }
            if (data.hasOwnProperty('GetChildFolders')) {
                obj['GetChildFolders'] = ApiClient.convertToType(data['GetChildFolders'], 'Boolean');
            }
            if (data.hasOwnProperty('IncludeChildCount')) {
                obj['IncludeChildCount'] = ApiClient.convertToType(data['IncludeChildCount'], 'Boolean');
            }
            if (data.hasOwnProperty('IncludeHidden')) {
                obj['IncludeHidden'] = ApiClient.convertToType(data['IncludeHidden'], 'Boolean');
            }
            if (data.hasOwnProperty('ParentFolder')) {
                obj['ParentFolder'] = ApiClient.convertToType(data['ParentFolder'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetFoldersRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetFoldersRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Cursor`
        if (data['Cursor']) { // data not null
          APICursor.validateJSON(data['Cursor']);
        }

        return true;
    }


}



/**
 * @member {module:com.alterian.ja.model/APICursor} Cursor
 */
GetFoldersRequest.prototype['Cursor'] = undefined;

/**
 * @member {module:com.alterian.ja.model/FolderTypes} FolderType
 */
GetFoldersRequest.prototype['FolderType'] = undefined;

/**
 * Return back the children of the folders [recursively]
 * @member {Boolean} GetChildFolders
 */
GetFoldersRequest.prototype['GetChildFolders'] = undefined;

/**
 * If GetChildFolders is set to false then this option can be user to get a count of the immediate children of each returned folder.
 * @member {Boolean} IncludeChildCount
 */
GetFoldersRequest.prototype['IncludeChildCount'] = undefined;

/**
 * Include hidden folders in your result
 * @member {Boolean} IncludeHidden
 */
GetFoldersRequest.prototype['IncludeHidden'] = undefined;

/**
 * Parent folder to start looking for folders
 * @member {Number} ParentFolder
 */
GetFoldersRequest.prototype['ParentFolder'] = undefined;






export default GetFoldersRequest;

