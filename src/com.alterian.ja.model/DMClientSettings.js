/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DMOmnitureSettings from './DMOmnitureSettings';
import DMWCMEntry from './DMWCMEntry';

/**
 * The DMClientSettings model module.
 * @module com.alterian.ja.model/DMClientSettings
 * @version 6.35.0
 */
class DMClientSettings {
    /**
     * Constructs a new <code>DMClientSettings</code>.
     * 
     * @alias module:com.alterian.ja.model/DMClientSettings
     */
    constructor() { 
        
        DMClientSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DMClientSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/DMClientSettings} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/DMClientSettings} The populated <code>DMClientSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DMClientSettings();

            if (data.hasOwnProperty('InboundDomain')) {
                obj['InboundDomain'] = ApiClient.convertToType(data['InboundDomain'], 'String');
            }
            if (data.hasOwnProperty('ContentDomain')) {
                obj['ContentDomain'] = ApiClient.convertToType(data['ContentDomain'], 'String');
            }
            if (data.hasOwnProperty('UploadImageDefault')) {
                obj['UploadImageDefault'] = ApiClient.convertToType(data['UploadImageDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('DMWCMList')) {
                obj['DMWCMList'] = ApiClient.convertToType(data['DMWCMList'], [DMWCMEntry]);
            }
            if (data.hasOwnProperty('PVID')) {
                obj['PVID'] = ApiClient.convertToType(data['PVID'], 'Number');
            }
            if (data.hasOwnProperty('UserCulture')) {
                obj['UserCulture'] = ApiClient.convertToType(data['UserCulture'], 'String');
            }
            if (data.hasOwnProperty('OmnitureSettings')) {
                obj['OmnitureSettings'] = DMOmnitureSettings.constructFromObject(data['OmnitureSettings']);
            }
            if (data.hasOwnProperty('DefaultTemplateCodePage')) {
                obj['DefaultTemplateCodePage'] = ApiClient.convertToType(data['DefaultTemplateCodePage'], 'Number');
            }
            if (data.hasOwnProperty('PVUrl')) {
                obj['PVUrl'] = ApiClient.convertToType(data['PVUrl'], 'String');
            }
            if (data.hasOwnProperty('SM2Url')) {
                obj['SM2Url'] = ApiClient.convertToType(data['SM2Url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DMClientSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DMClientSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['InboundDomain'] && !(typeof data['InboundDomain'] === 'string' || data['InboundDomain'] instanceof String)) {
            throw new Error("Expected the field `InboundDomain` to be a primitive type in the JSON string but got " + data['InboundDomain']);
        }
        // ensure the json data is a string
        if (data['ContentDomain'] && !(typeof data['ContentDomain'] === 'string' || data['ContentDomain'] instanceof String)) {
            throw new Error("Expected the field `ContentDomain` to be a primitive type in the JSON string but got " + data['ContentDomain']);
        }
        if (data['DMWCMList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['DMWCMList'])) {
                throw new Error("Expected the field `DMWCMList` to be an array in the JSON data but got " + data['DMWCMList']);
            }
            // validate the optional field `DMWCMList` (array)
            for (const item of data['DMWCMList']) {
                DMWCMEntry.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['UserCulture'] && !(typeof data['UserCulture'] === 'string' || data['UserCulture'] instanceof String)) {
            throw new Error("Expected the field `UserCulture` to be a primitive type in the JSON string but got " + data['UserCulture']);
        }
        // validate the optional field `OmnitureSettings`
        if (data['OmnitureSettings']) { // data not null
          DMOmnitureSettings.validateJSON(data['OmnitureSettings']);
        }
        // ensure the json data is a string
        if (data['PVUrl'] && !(typeof data['PVUrl'] === 'string' || data['PVUrl'] instanceof String)) {
            throw new Error("Expected the field `PVUrl` to be a primitive type in the JSON string but got " + data['PVUrl']);
        }
        // ensure the json data is a string
        if (data['SM2Url'] && !(typeof data['SM2Url'] === 'string' || data['SM2Url'] instanceof String)) {
            throw new Error("Expected the field `SM2Url` to be a primitive type in the JSON string but got " + data['SM2Url']);
        }

        return true;
    }


}



/**
 * 
 * @member {String} InboundDomain
 */
DMClientSettings.prototype['InboundDomain'] = undefined;

/**
 * 
 * @member {String} ContentDomain
 */
DMClientSettings.prototype['ContentDomain'] = undefined;

/**
 * 
 * @member {Boolean} UploadImageDefault
 */
DMClientSettings.prototype['UploadImageDefault'] = undefined;

/**
 * 
 * @member {Array.<module:com.alterian.ja.model/DMWCMEntry>} DMWCMList
 */
DMClientSettings.prototype['DMWCMList'] = undefined;

/**
 * 
 * @member {Number} PVID
 */
DMClientSettings.prototype['PVID'] = undefined;

/**
 * 
 * @member {String} UserCulture
 */
DMClientSettings.prototype['UserCulture'] = undefined;

/**
 * @member {module:com.alterian.ja.model/DMOmnitureSettings} OmnitureSettings
 */
DMClientSettings.prototype['OmnitureSettings'] = undefined;

/**
 * 
 * @member {Number} DefaultTemplateCodePage
 */
DMClientSettings.prototype['DefaultTemplateCodePage'] = undefined;

/**
 * 
 * @member {String} PVUrl
 */
DMClientSettings.prototype['PVUrl'] = undefined;

/**
 * 
 * @member {String} SM2Url
 */
DMClientSettings.prototype['SM2Url'] = undefined;






export default DMClientSettings;

