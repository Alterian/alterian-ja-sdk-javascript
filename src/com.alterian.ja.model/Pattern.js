/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ColumnPublishedTransformSummary from './ColumnPublishedTransformSummary';
import PatternState from './PatternState';

/**
 * The Pattern model module.
 * @module com.alterian.ja.model/Pattern
 * @version 6.35.0
 */
class Pattern {
    /**
     * Constructs a new <code>Pattern</code>.
     * 
     * @alias module:com.alterian.ja.model/Pattern
     */
    constructor() { 
        
        Pattern.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Pattern</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/Pattern} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/Pattern} The populated <code>Pattern</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Pattern();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('EventStreamId')) {
                obj['EventStreamId'] = ApiClient.convertToType(data['EventStreamId'], 'Number');
            }
            if (data.hasOwnProperty('SnapshotStart')) {
                obj['SnapshotStart'] = ApiClient.convertToType(data['SnapshotStart'], 'Date');
            }
            if (data.hasOwnProperty('SnapshotEnd')) {
                obj['SnapshotEnd'] = ApiClient.convertToType(data['SnapshotEnd'], 'Date');
            }
            if (data.hasOwnProperty('Settings')) {
                obj['Settings'] = ApiClient.convertToType(data['Settings'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = PatternState.constructFromObject(data['State']);
            }
            if (data.hasOwnProperty('DataSourceId')) {
                obj['DataSourceId'] = ApiClient.convertToType(data['DataSourceId'], 'Number');
            }
            if (data.hasOwnProperty('Transforms')) {
                obj['Transforms'] = ApiClient.convertToType(data['Transforms'], [ColumnPublishedTransformSummary]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Pattern</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Pattern</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Settings'] && !(typeof data['Settings'] === 'string' || data['Settings'] instanceof String)) {
            throw new Error("Expected the field `Settings` to be a primitive type in the JSON string but got " + data['Settings']);
        }
        if (data['Transforms']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Transforms'])) {
                throw new Error("Expected the field `Transforms` to be an array in the JSON data but got " + data['Transforms']);
            }
            // validate the optional field `Transforms` (array)
            for (const item of data['Transforms']) {
                ColumnPublishedTransformSummary.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * 
 * @member {Number} Id
 */
Pattern.prototype['Id'] = undefined;

/**
 * 
 * @member {Number} EventStreamId
 */
Pattern.prototype['EventStreamId'] = undefined;

/**
 * 
 * @member {Date} SnapshotStart
 */
Pattern.prototype['SnapshotStart'] = undefined;

/**
 * 
 * @member {Date} SnapshotEnd
 */
Pattern.prototype['SnapshotEnd'] = undefined;

/**
 * 
 * @member {String} Settings
 */
Pattern.prototype['Settings'] = undefined;

/**
 * @member {module:com.alterian.ja.model/PatternState} State
 */
Pattern.prototype['State'] = undefined;

/**
 * 
 * @member {Number} DataSourceId
 */
Pattern.prototype['DataSourceId'] = undefined;

/**
 * 
 * @member {Array.<module:com.alterian.ja.model/ColumnPublishedTransformSummary>} Transforms
 */
Pattern.prototype['Transforms'] = undefined;






export default Pattern;

