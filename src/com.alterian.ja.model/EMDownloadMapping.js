/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EMClient from './EMClient';

/**
 * The EMDownloadMapping model module.
 * @module com.alterian.ja.model/EMDownloadMapping
 * @version 6.35.0
 */
class EMDownloadMapping {
    /**
     * Constructs a new <code>EMDownloadMapping</code>.
     * Provides a download mapping into the EM system to a specific EM client and user
     * @alias module:com.alterian.ja.model/EMDownloadMapping
     */
    constructor() { 
        
        EMDownloadMapping.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EMDownloadMapping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/EMDownloadMapping} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/EMDownloadMapping} The populated <code>EMDownloadMapping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EMDownloadMapping();

            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('KeyColumnId')) {
                obj['KeyColumnId'] = ApiClient.convertToType(data['KeyColumnId'], 'Number');
            }
            if (data.hasOwnProperty('KeyColumnNameEx')) {
                obj['KeyColumnNameEx'] = ApiClient.convertToType(data['KeyColumnNameEx'], 'String');
            }
            if (data.hasOwnProperty('ResponseTable')) {
                obj['ResponseTable'] = ApiClient.convertToType(data['ResponseTable'], 'String');
            }
            if (data.hasOwnProperty('ContactTable')) {
                obj['ContactTable'] = ApiClient.convertToType(data['ContactTable'], 'String');
            }
            if (data.hasOwnProperty('EMPrimarykeyId')) {
                obj['EMPrimarykeyId'] = ApiClient.convertToType(data['EMPrimarykeyId'], 'Number');
            }
            if (data.hasOwnProperty('EMUNCOutputLocation')) {
                obj['EMUNCOutputLocation'] = ApiClient.convertToType(data['EMUNCOutputLocation'], 'String');
            }
            if (data.hasOwnProperty('EMPrimaryKeyType')) {
                obj['EMPrimaryKeyType'] = ApiClient.convertToType(data['EMPrimaryKeyType'], 'Number');
            }
            if (data.hasOwnProperty('DatasourceId')) {
                obj['DatasourceId'] = ApiClient.convertToType(data['DatasourceId'], 'Number');
            }
            if (data.hasOwnProperty('EMClient')) {
                obj['EMClient'] = EMClient.constructFromObject(data['EMClient']);
            }
            if (data.hasOwnProperty('EMClientID')) {
                obj['EMClientID'] = ApiClient.convertToType(data['EMClientID'], 'Number');
            }
            if (data.hasOwnProperty('DatasourceName')) {
                obj['DatasourceName'] = ApiClient.convertToType(data['DatasourceName'], 'String');
            }
            if (data.hasOwnProperty('OwnerID')) {
                obj['OwnerID'] = ApiClient.convertToType(data['OwnerID'], 'Number');
            }
            if (data.hasOwnProperty('CanEdit')) {
                obj['CanEdit'] = ApiClient.convertToType(data['CanEdit'], 'Number');
            }
            if (data.hasOwnProperty('IsEnabled')) {
                obj['IsEnabled'] = ApiClient.convertToType(data['IsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('EmPrimaryKeyName')) {
                obj['EmPrimaryKeyName'] = ApiClient.convertToType(data['EmPrimaryKeyName'], 'String');
            }
            if (data.hasOwnProperty('GDCTable')) {
                obj['GDCTable'] = ApiClient.convertToType(data['GDCTable'], 'String');
            }
            if (data.hasOwnProperty('PreferencesTable')) {
                obj['PreferencesTable'] = ApiClient.convertToType(data['PreferencesTable'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EMDownloadMapping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EMDownloadMapping</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['KeyColumnNameEx'] && !(typeof data['KeyColumnNameEx'] === 'string' || data['KeyColumnNameEx'] instanceof String)) {
            throw new Error("Expected the field `KeyColumnNameEx` to be a primitive type in the JSON string but got " + data['KeyColumnNameEx']);
        }
        // ensure the json data is a string
        if (data['ResponseTable'] && !(typeof data['ResponseTable'] === 'string' || data['ResponseTable'] instanceof String)) {
            throw new Error("Expected the field `ResponseTable` to be a primitive type in the JSON string but got " + data['ResponseTable']);
        }
        // ensure the json data is a string
        if (data['ContactTable'] && !(typeof data['ContactTable'] === 'string' || data['ContactTable'] instanceof String)) {
            throw new Error("Expected the field `ContactTable` to be a primitive type in the JSON string but got " + data['ContactTable']);
        }
        // ensure the json data is a string
        if (data['EMUNCOutputLocation'] && !(typeof data['EMUNCOutputLocation'] === 'string' || data['EMUNCOutputLocation'] instanceof String)) {
            throw new Error("Expected the field `EMUNCOutputLocation` to be a primitive type in the JSON string but got " + data['EMUNCOutputLocation']);
        }
        // validate the optional field `EMClient`
        if (data['EMClient']) { // data not null
          EMClient.validateJSON(data['EMClient']);
        }
        // ensure the json data is a string
        if (data['DatasourceName'] && !(typeof data['DatasourceName'] === 'string' || data['DatasourceName'] instanceof String)) {
            throw new Error("Expected the field `DatasourceName` to be a primitive type in the JSON string but got " + data['DatasourceName']);
        }
        // ensure the json data is a string
        if (data['EmPrimaryKeyName'] && !(typeof data['EmPrimaryKeyName'] === 'string' || data['EmPrimaryKeyName'] instanceof String)) {
            throw new Error("Expected the field `EmPrimaryKeyName` to be a primitive type in the JSON string but got " + data['EmPrimaryKeyName']);
        }
        // ensure the json data is a string
        if (data['GDCTable'] && !(typeof data['GDCTable'] === 'string' || data['GDCTable'] instanceof String)) {
            throw new Error("Expected the field `GDCTable` to be a primitive type in the JSON string but got " + data['GDCTable']);
        }
        // ensure the json data is a string
        if (data['PreferencesTable'] && !(typeof data['PreferencesTable'] === 'string' || data['PreferencesTable'] instanceof String)) {
            throw new Error("Expected the field `PreferencesTable` to be a primitive type in the JSON string but got " + data['PreferencesTable']);
        }

        return true;
    }


}



/**
 * Unique ID of this mapping
 * @member {Number} ID
 */
EMDownloadMapping.prototype['ID'] = undefined;

/**
 * Name of this mapping
 * @member {String} Name
 */
EMDownloadMapping.prototype['Name'] = undefined;

/**
 * Key column Id associated with this client
 * @member {Number} KeyColumnId
 */
EMDownloadMapping.prototype['KeyColumnId'] = undefined;

/**
 * Key column NameEx - readonly
 * @member {String} KeyColumnNameEx
 */
EMDownloadMapping.prototype['KeyColumnNameEx'] = undefined;

/**
 * Name of the response table
 * @member {String} ResponseTable
 */
EMDownloadMapping.prototype['ResponseTable'] = undefined;

/**
 * Name of the contact table
 * @member {String} ContactTable
 */
EMDownloadMapping.prototype['ContactTable'] = undefined;

/**
 * Primary key for EM to which this EM Client is mapped
 * @member {Number} EMPrimarykeyId
 */
EMDownloadMapping.prototype['EMPrimarykeyId'] = undefined;

/**
 * UNC path for hosted EM\\CM systems
 * @member {String} EMUNCOutputLocation
 */
EMDownloadMapping.prototype['EMUNCOutputLocation'] = undefined;

/**
 * EM's primary key type
 * @member {Number} EMPrimaryKeyType
 */
EMDownloadMapping.prototype['EMPrimaryKeyType'] = undefined;

/**
 * Datasource Id associated with this client
 * @member {Number} DatasourceId
 */
EMDownloadMapping.prototype['DatasourceId'] = undefined;

/**
 * @member {module:com.alterian.ja.model/EMClient} EMClient
 */
EMDownloadMapping.prototype['EMClient'] = undefined;

/**
 * EM Client ID of this mapping
 * @member {Number} EMClientID
 */
EMDownloadMapping.prototype['EMClientID'] = undefined;

/**
 * Datasource Name - readonly
 * @member {String} DatasourceName
 */
EMDownloadMapping.prototype['DatasourceName'] = undefined;

/**
 * The owner\\creator of this EMMapping
 * @member {Number} OwnerID
 */
EMDownloadMapping.prototype['OwnerID'] = undefined;

/**
 * Does the Mapping have edit permissions for this user - cannot set this value using this property
 * @member {Number} CanEdit
 */
EMDownloadMapping.prototype['CanEdit'] = undefined;

/**
 * Is mapping enabled
 * @member {Boolean} IsEnabled
 */
EMDownloadMapping.prototype['IsEnabled'] = undefined;

/**
 * EM Primary Key Name
 * @member {String} EmPrimaryKeyName
 */
EMDownloadMapping.prototype['EmPrimaryKeyName'] = undefined;

/**
 * Name of the table which will store data collection information for this primary key
 * @member {String} GDCTable
 */
EMDownloadMapping.prototype['GDCTable'] = undefined;

/**
 * Name of the table which will store Preference OptIn\\OptOut data
 * @member {String} PreferencesTable
 */
EMDownloadMapping.prototype['PreferencesTable'] = undefined;






export default EMDownloadMapping;

