/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ALProcess model module.
 * @module com.alterian.ja.model/ALProcess
 * @version 6.35.0
 */
class ALProcess {
    /**
     * Constructs a new <code>ALProcess</code>.
     * Information that represents the processes (services and executables) that together make up an installed system             This is used to manage the system, to monitor which processes are busy or are responding and to describe items in the alert log
     * @alias module:com.alterian.ja.model/ALProcess
     */
    constructor() { 
        
        ALProcess.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ALProcess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/ALProcess} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/ALProcess} The populated <code>ALProcess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ALProcess();

            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
            }
            if (data.hasOwnProperty('ApplicationID')) {
                obj['ApplicationID'] = ApiClient.convertToType(data['ApplicationID'], 'Number');
            }
            if (data.hasOwnProperty('HostName')) {
                obj['HostName'] = ApiClient.convertToType(data['HostName'], 'String');
            }
            if (data.hasOwnProperty('LastHeartbeat')) {
                obj['LastHeartbeat'] = ApiClient.convertToType(data['LastHeartbeat'], 'Date');
            }
            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('HeartbeatThreshold')) {
                obj['HeartbeatThreshold'] = ApiClient.convertToType(data['HeartbeatThreshold'], 'Number');
            }
            if (data.hasOwnProperty('NetworkPath')) {
                obj['NetworkPath'] = ApiClient.convertToType(data['NetworkPath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ALProcess</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ALProcess</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['HostName'] && !(typeof data['HostName'] === 'string' || data['HostName'] instanceof String)) {
            throw new Error("Expected the field `HostName` to be a primitive type in the JSON string but got " + data['HostName']);
        }
        // ensure the json data is a string
        if (data['NetworkPath'] && !(typeof data['NetworkPath'] === 'string' || data['NetworkPath'] instanceof String)) {
            throw new Error("Expected the field `NetworkPath` to be a primitive type in the JSON string but got " + data['NetworkPath']);
        }

        return true;
    }


}



/**
 * 
 * @member {Number} ID
 */
ALProcess.prototype['ID'] = undefined;

/**
 * 
 * @member {Number} ApplicationID
 */
ALProcess.prototype['ApplicationID'] = undefined;

/**
 * 
 * @member {String} HostName
 */
ALProcess.prototype['HostName'] = undefined;

/**
 * 
 * @member {Date} LastHeartbeat
 */
ALProcess.prototype['LastHeartbeat'] = undefined;

/**
 * 
 * @member {Boolean} Enabled
 */
ALProcess.prototype['Enabled'] = undefined;

/**
 * 
 * @member {Number} HeartbeatThreshold
 */
ALProcess.prototype['HeartbeatThreshold'] = undefined;

/**
 * 
 * @member {String} NetworkPath
 */
ALProcess.prototype['NetworkPath'] = undefined;






export default ALProcess;

