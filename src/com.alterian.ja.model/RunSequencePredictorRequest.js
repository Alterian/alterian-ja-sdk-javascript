/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelSnapshotOptions from './ModelSnapshotOptions';
import SequencePredictorPredictionOptions from './SequencePredictorPredictionOptions';
import SequencePredictorTrainingOptions from './SequencePredictorTrainingOptions';

/**
 * The RunSequencePredictorRequest model module.
 * @module com.alterian.ja.model/RunSequencePredictorRequest
 * @version 6.35.0
 */
class RunSequencePredictorRequest {
    /**
     * Constructs a new <code>RunSequencePredictorRequest</code>.
     * @alias module:com.alterian.ja.model/RunSequencePredictorRequest
     */
    constructor() { 
        
        RunSequencePredictorRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RunSequencePredictorRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/RunSequencePredictorRequest} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/RunSequencePredictorRequest} The populated <code>RunSequencePredictorRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RunSequencePredictorRequest();

            if (data.hasOwnProperty('EventStreamId')) {
                obj['EventStreamId'] = ApiClient.convertToType(data['EventStreamId'], 'Number');
            }
            if (data.hasOwnProperty('IsPublic')) {
                obj['IsPublic'] = ApiClient.convertToType(data['IsPublic'], 'Boolean');
            }
            if (data.hasOwnProperty('IsSynchronous')) {
                obj['IsSynchronous'] = ApiClient.convertToType(data['IsSynchronous'], 'Boolean');
            }
            if (data.hasOwnProperty('ModelId')) {
                obj['ModelId'] = ApiClient.convertToType(data['ModelId'], 'Number');
            }
            if (data.hasOwnProperty('PredictionOptions')) {
                obj['PredictionOptions'] = SequencePredictorPredictionOptions.constructFromObject(data['PredictionOptions']);
            }
            if (data.hasOwnProperty('PredictionSnapshotOptions')) {
                obj['PredictionSnapshotOptions'] = ModelSnapshotOptions.constructFromObject(data['PredictionSnapshotOptions']);
            }
            if (data.hasOwnProperty('TrainingOptions')) {
                obj['TrainingOptions'] = SequencePredictorTrainingOptions.constructFromObject(data['TrainingOptions']);
            }
            if (data.hasOwnProperty('TrainingSnapshotOptions')) {
                obj['TrainingSnapshotOptions'] = ModelSnapshotOptions.constructFromObject(data['TrainingSnapshotOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RunSequencePredictorRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RunSequencePredictorRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `PredictionOptions`
        if (data['PredictionOptions']) { // data not null
          SequencePredictorPredictionOptions.validateJSON(data['PredictionOptions']);
        }
        // validate the optional field `PredictionSnapshotOptions`
        if (data['PredictionSnapshotOptions']) { // data not null
          ModelSnapshotOptions.validateJSON(data['PredictionSnapshotOptions']);
        }
        // validate the optional field `TrainingOptions`
        if (data['TrainingOptions']) { // data not null
          SequencePredictorTrainingOptions.validateJSON(data['TrainingOptions']);
        }
        // validate the optional field `TrainingSnapshotOptions`
        if (data['TrainingSnapshotOptions']) { // data not null
          ModelSnapshotOptions.validateJSON(data['TrainingSnapshotOptions']);
        }

        return true;
    }


}



/**
 * Event Stream ID
 * @member {Number} EventStreamId
 */
RunSequencePredictorRequest.prototype['EventStreamId'] = undefined;

/**
 * Set to true for a public model or prediction that should be shared across users. Set to false for the model and prediction to be associated with the token's user
 * @member {Boolean} IsPublic
 */
RunSequencePredictorRequest.prototype['IsPublic'] = undefined;

/**
 * Set to false to run asynchronously. In this mode, the ProcessQueueId result property will be populated and can be passed to GetProcessStatus to check for completion
 * @member {Boolean} IsSynchronous
 */
RunSequencePredictorRequest.prototype['IsSynchronous'] = undefined;

/**
 * Specify this to use an existing model rather than training a new one
 * @member {Number} ModelId
 */
RunSequencePredictorRequest.prototype['ModelId'] = undefined;

/**
 * @member {module:com.alterian.ja.model/SequencePredictorPredictionOptions} PredictionOptions
 */
RunSequencePredictorRequest.prototype['PredictionOptions'] = undefined;

/**
 * @member {module:com.alterian.ja.model/ModelSnapshotOptions} PredictionSnapshotOptions
 */
RunSequencePredictorRequest.prototype['PredictionSnapshotOptions'] = undefined;

/**
 * @member {module:com.alterian.ja.model/SequencePredictorTrainingOptions} TrainingOptions
 */
RunSequencePredictorRequest.prototype['TrainingOptions'] = undefined;

/**
 * @member {module:com.alterian.ja.model/ModelSnapshotOptions} TrainingSnapshotOptions
 */
RunSequencePredictorRequest.prototype['TrainingSnapshotOptions'] = undefined;






export default RunSequencePredictorRequest;

