/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteEventStreamCustomerColumnsFromGroupRequest model module.
 * @module com.alterian.ja.model/DeleteEventStreamCustomerColumnsFromGroupRequest
 * @version 6.35.0
 */
class DeleteEventStreamCustomerColumnsFromGroupRequest {
    /**
     * Constructs a new <code>DeleteEventStreamCustomerColumnsFromGroupRequest</code>.
     * @alias module:com.alterian.ja.model/DeleteEventStreamCustomerColumnsFromGroupRequest
     */
    constructor() { 
        
        DeleteEventStreamCustomerColumnsFromGroupRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeleteEventStreamCustomerColumnsFromGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/DeleteEventStreamCustomerColumnsFromGroupRequest} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/DeleteEventStreamCustomerColumnsFromGroupRequest} The populated <code>DeleteEventStreamCustomerColumnsFromGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteEventStreamCustomerColumnsFromGroupRequest();

            if (data.hasOwnProperty('FieldNames')) {
                obj['FieldNames'] = ApiClient.convertToType(data['FieldNames'], ['String']);
            }
            if (data.hasOwnProperty('GroupId')) {
                obj['GroupId'] = ApiClient.convertToType(data['GroupId'], 'Number');
            }
            if (data.hasOwnProperty('KeyColumnName')) {
                obj['KeyColumnName'] = ApiClient.convertToType(data['KeyColumnName'], 'String');
            }
            if (data.hasOwnProperty('PersonaColumnName')) {
                obj['PersonaColumnName'] = ApiClient.convertToType(data['PersonaColumnName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteEventStreamCustomerColumnsFromGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteEventStreamCustomerColumnsFromGroupRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['FieldNames'])) {
            throw new Error("Expected the field `FieldNames` to be an array in the JSON data but got " + data['FieldNames']);
        }
        // ensure the json data is a string
        if (data['KeyColumnName'] && !(typeof data['KeyColumnName'] === 'string' || data['KeyColumnName'] instanceof String)) {
            throw new Error("Expected the field `KeyColumnName` to be a primitive type in the JSON string but got " + data['KeyColumnName']);
        }
        // ensure the json data is a string
        if (data['PersonaColumnName'] && !(typeof data['PersonaColumnName'] === 'string' || data['PersonaColumnName'] instanceof String)) {
            throw new Error("Expected the field `PersonaColumnName` to be a primitive type in the JSON string but got " + data['PersonaColumnName']);
        }

        return true;
    }


}



/**
 * A list of @see(EventStreamCustomerField) names to remove from the event stream
 * @member {Array.<String>} FieldNames
 */
DeleteEventStreamCustomerColumnsFromGroupRequest.prototype['FieldNames'] = undefined;

/**
 * Id of the group of event streams from which you wish to delete the attribute data
 * @member {Number} GroupId
 */
DeleteEventStreamCustomerColumnsFromGroupRequest.prototype['GroupId'] = undefined;

/**
 * In your list of columns, you must specify which column contains the key field for your customer (for instance, email address).  If you do not, the loader rule created will expect a cxid to be provided
 * @member {String} KeyColumnName
 */
DeleteEventStreamCustomerColumnsFromGroupRequest.prototype['KeyColumnName'] = undefined;

/**
 * If your data is going to have persona data, specify the column which holds the persona information.  Note that personas must be separated by a pipe character if there are multiples
 * @member {String} PersonaColumnName
 */
DeleteEventStreamCustomerColumnsFromGroupRequest.prototype['PersonaColumnName'] = undefined;






export default DeleteEventStreamCustomerColumnsFromGroupRequest;

