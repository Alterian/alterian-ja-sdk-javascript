/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import APICursor from './APICursor';
import APIFilter from './APIFilter';

/**
 * The GetDataSourceItemsRequest model module.
 * @module com.alterian.ja.model/GetDataSourceItemsRequest
 * @version 6.35.0
 */
class GetDataSourceItemsRequest {
    /**
     * Constructs a new <code>GetDataSourceItemsRequest</code>.
     * @alias module:com.alterian.ja.model/GetDataSourceItemsRequest
     */
    constructor() { 
        
        GetDataSourceItemsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetDataSourceItemsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/GetDataSourceItemsRequest} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/GetDataSourceItemsRequest} The populated <code>GetDataSourceItemsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDataSourceItemsRequest();

            if (data.hasOwnProperty('Cursor')) {
                obj['Cursor'] = APICursor.constructFromObject(data['Cursor']);
            }
            if (data.hasOwnProperty('Filters')) {
                obj['Filters'] = ApiClient.convertToType(data['Filters'], [APIFilter]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDataSourceItemsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDataSourceItemsRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Cursor`
        if (data['Cursor']) { // data not null
          APICursor.validateJSON(data['Cursor']);
        }
        if (data['Filters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Filters'])) {
                throw new Error("Expected the field `Filters` to be an array in the JSON data but got " + data['Filters']);
            }
            // validate the optional field `Filters` (array)
            for (const item of data['Filters']) {
                APIFilter.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:com.alterian.ja.model/APICursor} Cursor
 */
GetDataSourceItemsRequest.prototype['Cursor'] = undefined;

/**
 * @see(APIFilter)
 * @member {Array.<module:com.alterian.ja.model/APIFilter>} Filters
 */
GetDataSourceItemsRequest.prototype['Filters'] = undefined;






export default GetDataSourceItemsRequest;

