/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateRepeatingPatternItemScoresRequest model module.
 * @module com.alterian.ja.model/UpdateRepeatingPatternItemScoresRequest
 * @version 6.35.0
 */
class UpdateRepeatingPatternItemScoresRequest {
    /**
     * Constructs a new <code>UpdateRepeatingPatternItemScoresRequest</code>.
     * @alias module:com.alterian.ja.model/UpdateRepeatingPatternItemScoresRequest
     */
    constructor() { 
        
        UpdateRepeatingPatternItemScoresRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateRepeatingPatternItemScoresRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/UpdateRepeatingPatternItemScoresRequest} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/UpdateRepeatingPatternItemScoresRequest} The populated <code>UpdateRepeatingPatternItemScoresRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateRepeatingPatternItemScoresRequest();

            if (data.hasOwnProperty('DecodeId')) {
                obj['DecodeId'] = ApiClient.convertToType(data['DecodeId'], 'Number');
            }
            if (data.hasOwnProperty('DecodeVersion')) {
                obj['DecodeVersion'] = ApiClient.convertToType(data['DecodeVersion'], 'Number');
            }
            if (data.hasOwnProperty('Items')) {
                obj['Items'] = ApiClient.convertToType(data['Items'], ['String']);
            }
            if (data.hasOwnProperty('PatternId')) {
                obj['PatternId'] = ApiClient.convertToType(data['PatternId'], 'Number');
            }
            if (data.hasOwnProperty('ReplaceExistingScores')) {
                obj['ReplaceExistingScores'] = ApiClient.convertToType(data['ReplaceExistingScores'], 'Boolean');
            }
            if (data.hasOwnProperty('Scores')) {
                obj['Scores'] = ApiClient.convertToType(data['Scores'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateRepeatingPatternItemScoresRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateRepeatingPatternItemScoresRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['Items'])) {
            throw new Error("Expected the field `Items` to be an array in the JSON data but got " + data['Items']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Scores'])) {
            throw new Error("Expected the field `Scores` to be an array in the JSON data but got " + data['Scores']);
        }

        return true;
    }


}



/**
 * Optional. Only required if the scores are to be recorded against a transform
 * @member {Number} DecodeId
 */
UpdateRepeatingPatternItemScoresRequest.prototype['DecodeId'] = undefined;

/**
 * Optional. Only required if the scores are to be recorded against a transform
 * @member {Number} DecodeVersion
 */
UpdateRepeatingPatternItemScoresRequest.prototype['DecodeVersion'] = undefined;

/**
 * List of the sequence items to be re-scored
 * @member {Array.<String>} Items
 */
UpdateRepeatingPatternItemScoresRequest.prototype['Items'] = undefined;

/**
 * Pattern Id
 * @member {Number} PatternId
 */
UpdateRepeatingPatternItemScoresRequest.prototype['PatternId'] = undefined;

/**
 * Defaults to False meaning that the update acts in a 'cursored' mode - the UI can submit only the modified scores and any existing scores from the previous list version are preserved. When set to true then any existing scores are completely replaced
 * @member {Boolean} ReplaceExistingScores
 */
UpdateRepeatingPatternItemScoresRequest.prototype['ReplaceExistingScores'] = undefined;

/**
 * List of the scores (must have a 1:1 relationship with Items)
 * @member {Array.<Number>} Scores
 */
UpdateRepeatingPatternItemScoresRequest.prototype['Scores'] = undefined;






export default UpdateRepeatingPatternItemScoresRequest;

