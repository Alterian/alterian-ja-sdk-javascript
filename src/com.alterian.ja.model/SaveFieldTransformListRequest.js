/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SaveFieldTransformListRequest model module.
 * @module com.alterian.ja.model/SaveFieldTransformListRequest
 * @version 6.35.0
 */
class SaveFieldTransformListRequest {
    /**
     * Constructs a new <code>SaveFieldTransformListRequest</code>.
     * @alias module:com.alterian.ja.model/SaveFieldTransformListRequest
     */
    constructor() { 
        
        SaveFieldTransformListRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SaveFieldTransformListRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/SaveFieldTransformListRequest} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/SaveFieldTransformListRequest} The populated <code>SaveFieldTransformListRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SaveFieldTransformListRequest();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'Number');
            }
            if (data.hasOwnProperty('JSONTransforms')) {
                obj['JSONTransforms'] = ApiClient.convertToType(data['JSONTransforms'], 'String');
            }
            if (data.hasOwnProperty('Metadata')) {
                obj['Metadata'] = ApiClient.convertToType(data['Metadata'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SaveFieldTransformListRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SaveFieldTransformListRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['JSONTransforms'] && !(typeof data['JSONTransforms'] === 'string' || data['JSONTransforms'] instanceof String)) {
            throw new Error("Expected the field `JSONTransforms` to be a primitive type in the JSON string but got " + data['JSONTransforms']);
        }
        // ensure the json data is a string
        if (data['Metadata'] && !(typeof data['Metadata'] === 'string' || data['Metadata'] instanceof String)) {
            throw new Error("Expected the field `Metadata` to be a primitive type in the JSON string but got " + data['Metadata']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }

        return true;
    }


}



/**
 * Optional ID for use when creating a new version of an existing transform list
 * @member {Number} Id
 */
SaveFieldTransformListRequest.prototype['Id'] = undefined;

/**
 * Assumed to be a JSON array of single level objects e.g. [{{\\\"FrequencyReplace\\\":{{\\\"@minimum\\\":8035,\\\"@replacement\\\":\\\"My Replacement\\\"}}}}]. Note that attributes must be prefixed with @
 * @member {String} JSONTransforms
 */
SaveFieldTransformListRequest.prototype['JSONTransforms'] = undefined;

/**
 * JSON Blob used by the UI to store sampling settings / screen layout when editing the transform
 * @member {String} Metadata
 */
SaveFieldTransformListRequest.prototype['Metadata'] = undefined;

/**
 * Name of the list (required for new lists)
 * @member {String} Name
 */
SaveFieldTransformListRequest.prototype['Name'] = undefined;






export default SaveFieldTransformListRequest;

