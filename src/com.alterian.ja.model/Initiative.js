/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Rule from './Rule';

/**
 * The Initiative model module.
 * @module com.alterian.ja.model/Initiative
 * @version 6.35.0
 */
class Initiative {
    /**
     * Constructs a new <code>Initiative</code>.
     * Definition of a initiative
     * @alias module:com.alterian.ja.model/Initiative
     */
    constructor() { 
        
        Initiative.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Initiative</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/Initiative} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/Initiative} The populated <code>Initiative</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Initiative();

            if (data.hasOwnProperty('Count')) {
                obj['Count'] = ApiClient.convertToType(data['Count'], 'Number');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('BusinessGoalID')) {
                obj['BusinessGoalID'] = ApiClient.convertToType(data['BusinessGoalID'], 'Number');
            }
            if (data.hasOwnProperty('IsDeleted')) {
                obj['IsDeleted'] = ApiClient.convertToType(data['IsDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('IsGrowthGood')) {
                obj['IsGrowthGood'] = ApiClient.convertToType(data['IsGrowthGood'], 'Boolean');
            }
            if (data.hasOwnProperty('Rules')) {
                obj['Rules'] = ApiClient.convertToType(data['Rules'], [Rule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Initiative</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Initiative</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        if (data['Rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Rules'])) {
                throw new Error("Expected the field `Rules` to be an array in the JSON data but got " + data['Rules']);
            }
            // validate the optional field `Rules` (array)
            for (const item of data['Rules']) {
                Rule.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Count
 * @member {Number} Count
 */
Initiative.prototype['Count'] = undefined;

/**
 * Initiative ID
 * @member {Number} ID
 */
Initiative.prototype['ID'] = undefined;

/**
 * Name of the initiative goal
 * @member {String} Name
 */
Initiative.prototype['Name'] = undefined;

/**
 * A longer description of what the objective of the goal is
 * @member {String} Description
 */
Initiative.prototype['Description'] = undefined;

/**
 * Business Goal ID
 * @member {Number} BusinessGoalID
 */
Initiative.prototype['BusinessGoalID'] = undefined;

/**
 * IsDeleted
 * @member {Boolean} IsDeleted
 */
Initiative.prototype['IsDeleted'] = undefined;

/**
 * IsGrowthGood. True growth is good, false growth is negative. Defaults to false if not specified.
 * @member {Boolean} IsGrowthGood
 */
Initiative.prototype['IsGrowthGood'] = undefined;

/**
 * DDE Rule
 * @member {Array.<module:com.alterian.ja.model/Rule>} Rules
 */
Initiative.prototype['Rules'] = undefined;






export default Initiative;

