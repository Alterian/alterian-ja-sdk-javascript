/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnableDatasourceRequest model module.
 * @module com.alterian.ja.model/EnableDatasourceRequest
 * @version 6.35.0
 */
class EnableDatasourceRequest {
    /**
     * Constructs a new <code>EnableDatasourceRequest</code>.
     * @alias module:com.alterian.ja.model/EnableDatasourceRequest
     */
    constructor() { 
        
        EnableDatasourceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnableDatasourceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/EnableDatasourceRequest} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/EnableDatasourceRequest} The populated <code>EnableDatasourceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnableDatasourceRequest();

            if (data.hasOwnProperty('DatasourceId')) {
                obj['DatasourceId'] = ApiClient.convertToType(data['DatasourceId'], 'Number');
            }
            if (data.hasOwnProperty('Refresh')) {
                obj['Refresh'] = ApiClient.convertToType(data['Refresh'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnableDatasourceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnableDatasourceRequest</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The id of the datasource that you want to enable.
 * @member {Number} DatasourceId
 */
EnableDatasourceRequest.prototype['DatasourceId'] = undefined;

/**
 * pass True if you would like the datasource cache to be updated with a new structure or new data based upon a dataload.  Setting this to True will ask the engine listener service to refresh this datasource in the next polling cycle.  It make take several minutes for the refresh to happen.  You can call @see(GetDatasource) to get the last refresh date and see if it has happened successfully.
 * @member {Boolean} Refresh
 */
EnableDatasourceRequest.prototype['Refresh'] = undefined;






export default EnableDatasourceRequest;

