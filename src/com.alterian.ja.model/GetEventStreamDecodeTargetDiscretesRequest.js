/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetEventStreamDecodeTargetDiscretesRequest model module.
 * @module com.alterian.ja.model/GetEventStreamDecodeTargetDiscretesRequest
 * @version 6.35.0
 */
class GetEventStreamDecodeTargetDiscretesRequest {
    /**
     * Constructs a new <code>GetEventStreamDecodeTargetDiscretesRequest</code>.
     * @alias module:com.alterian.ja.model/GetEventStreamDecodeTargetDiscretesRequest
     */
    constructor() { 
        
        GetEventStreamDecodeTargetDiscretesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetEventStreamDecodeTargetDiscretesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/GetEventStreamDecodeTargetDiscretesRequest} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/GetEventStreamDecodeTargetDiscretesRequest} The populated <code>GetEventStreamDecodeTargetDiscretesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetEventStreamDecodeTargetDiscretesRequest();

            if (data.hasOwnProperty('BaseListId')) {
                obj['BaseListId'] = ApiClient.convertToType(data['BaseListId'], 'Number');
            }
            if (data.hasOwnProperty('BaseListVersion')) {
                obj['BaseListVersion'] = ApiClient.convertToType(data['BaseListVersion'], 'Number');
            }
            if (data.hasOwnProperty('ColumnName')) {
                obj['ColumnName'] = ApiClient.convertToType(data['ColumnName'], 'String');
            }
            if (data.hasOwnProperty('DefaultLabel')) {
                obj['DefaultLabel'] = ApiClient.convertToType(data['DefaultLabel'], 'String');
            }
            if (data.hasOwnProperty('EventDateTimeLower')) {
                obj['EventDateTimeLower'] = ApiClient.convertToType(data['EventDateTimeLower'], 'Date');
            }
            if (data.hasOwnProperty('EventDateTimeUpper')) {
                obj['EventDateTimeUpper'] = ApiClient.convertToType(data['EventDateTimeUpper'], 'Date');
            }
            if (data.hasOwnProperty('EventStreamId')) {
                obj['EventStreamId'] = ApiClient.convertToType(data['EventStreamId'], 'Number');
            }
            if (data.hasOwnProperty('IsDataRefreshRequired')) {
                obj['IsDataRefreshRequired'] = ApiClient.convertToType(data['IsDataRefreshRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('IsDefaultLabelConfigured')) {
                obj['IsDefaultLabelConfigured'] = ApiClient.convertToType(data['IsDefaultLabelConfigured'], 'Boolean');
            }
            if (data.hasOwnProperty('SourceLabels')) {
                obj['SourceLabels'] = ApiClient.convertToType(data['SourceLabels'], ['String']);
            }
            if (data.hasOwnProperty('TargetLabels')) {
                obj['TargetLabels'] = ApiClient.convertToType(data['TargetLabels'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetEventStreamDecodeTargetDiscretesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetEventStreamDecodeTargetDiscretesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ColumnName'] && !(typeof data['ColumnName'] === 'string' || data['ColumnName'] instanceof String)) {
            throw new Error("Expected the field `ColumnName` to be a primitive type in the JSON string but got " + data['ColumnName']);
        }
        // ensure the json data is a string
        if (data['DefaultLabel'] && !(typeof data['DefaultLabel'] === 'string' || data['DefaultLabel'] instanceof String)) {
            throw new Error("Expected the field `DefaultLabel` to be a primitive type in the JSON string but got " + data['DefaultLabel']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['SourceLabels'])) {
            throw new Error("Expected the field `SourceLabels` to be an array in the JSON data but got " + data['SourceLabels']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['TargetLabels'])) {
            throw new Error("Expected the field `TargetLabels` to be an array in the JSON data but got " + data['TargetLabels']);
        }

        return true;
    }


}



/**
 * Optionally base the decodes on a specified decode list subject to any explicitly specified overrides
 * @member {Number} BaseListId
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['BaseListId'] = undefined;

/**
 * Optional list version (defaults to latest)
 * @member {Number} BaseListVersion
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['BaseListVersion'] = undefined;

/**
 * Column from the event stream to be decoded (defaults to Location)
 * @member {String} ColumnName
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['ColumnName'] = undefined;

/**
 * In conjunction with IsDefaultLabelConfigured this allows the API to override the default label from any specified base decode list. Pass NULL to remove an underlying list default and an empty string or space to override it to NULL
 * @member {String} DefaultLabel
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['DefaultLabel'] = undefined;

/**
 * Start of the date window for column values to be displayed and decoded
 * @member {Date} EventDateTimeLower
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['EventDateTimeLower'] = undefined;

/**
 * End of the date window for column values to be displayed and decoded
 * @member {Date} EventDateTimeUpper
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['EventDateTimeUpper'] = undefined;

/**
 * Event Stream Id
 * @member {Number} EventStreamId
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['EventStreamId'] = undefined;

/**
 * Force the source labels to be refreshed from the event stream data
 * @member {Boolean} IsDataRefreshRequired
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['IsDataRefreshRequired'] = undefined;

/**
 * Set this to true if DefaultLabel is being used. If set to false then the default label will be determined by any specified base decode list
 * @member {Boolean} IsDefaultLabelConfigured
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['IsDefaultLabelConfigured'] = undefined;

/**
 * Specify any source labels that should be overriden on the specified base decode list
 * @member {Array.<String>} SourceLabels
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['SourceLabels'] = undefined;

/**
 * Specify the target labels that should override the specified base decode list. Pass NULL to remove an underlying list decode or an empty string to override it to NULL. Pass a NULL list to remove mappings for all the specified source labels
 * @member {Array.<String>} TargetLabels
 */
GetEventStreamDecodeTargetDiscretesRequest.prototype['TargetLabels'] = undefined;






export default GetEventStreamDecodeTargetDiscretesRequest;

