/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BusinessGoalKPI from './BusinessGoalKPI';

/**
 * The BusinessGoal model module.
 * @module com.alterian.ja.model/BusinessGoal
 * @version 6.35.0
 */
class BusinessGoal {
    /**
     * Constructs a new <code>BusinessGoal</code>.
     * Definition of a business goal
     * @alias module:com.alterian.ja.model/BusinessGoal
     */
    constructor() { 
        
        BusinessGoal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BusinessGoal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/BusinessGoal} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/BusinessGoal} The populated <code>BusinessGoal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BusinessGoal();

            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Position')) {
                obj['Position'] = ApiClient.convertToType(data['Position'], 'Number');
            }
            if (data.hasOwnProperty('KPI')) {
                obj['KPI'] = BusinessGoalKPI.constructFromObject(data['KPI']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BusinessGoal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BusinessGoal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // validate the optional field `KPI`
        if (data['KPI']) { // data not null
          BusinessGoalKPI.validateJSON(data['KPI']);
        }

        return true;
    }


}



/**
 * Goal ID
 * @member {Number} ID
 */
BusinessGoal.prototype['ID'] = undefined;

/**
 * Name of the business goal
 * @member {String} Name
 */
BusinessGoal.prototype['Name'] = undefined;

/**
 * A longer description of what the objective of the goal is
 * @member {String} Description
 */
BusinessGoal.prototype['Description'] = undefined;

/**
 * 
 * @member {Number} Position
 */
BusinessGoal.prototype['Position'] = undefined;

/**
 * @member {module:com.alterian.ja.model/BusinessGoalKPI} KPI
 */
BusinessGoal.prototype['KPI'] = undefined;






export default BusinessGoal;

