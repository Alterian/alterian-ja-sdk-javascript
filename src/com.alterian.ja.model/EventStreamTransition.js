/**
 * Journey Analytics API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 6.35.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EventStreamTransition model module.
 * @module com.alterian.ja.model/EventStreamTransition
 * @version 6.35.0
 */
class EventStreamTransition {
    /**
     * Constructs a new <code>EventStreamTransition</code>.
     * 
     * @alias module:com.alterian.ja.model/EventStreamTransition
     */
    constructor() { 
        
        EventStreamTransition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EventStreamTransition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.alterian.ja.model/EventStreamTransition} obj Optional instance to populate.
     * @return {module:com.alterian.ja.model/EventStreamTransition} The populated <code>EventStreamTransition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventStreamTransition();

            if (data.hasOwnProperty('Interaction')) {
                obj['Interaction'] = ApiClient.convertToType(data['Interaction'], 'Number');
            }
            if (data.hasOwnProperty('From')) {
                obj['From'] = ApiClient.convertToType(data['From'], 'Number');
            }
            if (data.hasOwnProperty('To')) {
                obj['To'] = ApiClient.convertToType(data['To'], 'Number');
            }
            if (data.hasOwnProperty('SecondaryFrom')) {
                obj['SecondaryFrom'] = ApiClient.convertToType(data['SecondaryFrom'], 'Number');
            }
            if (data.hasOwnProperty('SecondaryTo')) {
                obj['SecondaryTo'] = ApiClient.convertToType(data['SecondaryTo'], 'Number');
            }
            if (data.hasOwnProperty('Count')) {
                obj['Count'] = ApiClient.convertToType(data['Count'], 'Number');
            }
            if (data.hasOwnProperty('IsPrediction')) {
                obj['IsPrediction'] = ApiClient.convertToType(data['IsPrediction'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventStreamTransition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventStreamTransition</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * 
 * @member {Number} Interaction
 */
EventStreamTransition.prototype['Interaction'] = undefined;

/**
 * 
 * @member {Number} From
 */
EventStreamTransition.prototype['From'] = undefined;

/**
 * 
 * @member {Number} To
 */
EventStreamTransition.prototype['To'] = undefined;

/**
 * 
 * @member {Number} SecondaryFrom
 */
EventStreamTransition.prototype['SecondaryFrom'] = undefined;

/**
 * 
 * @member {Number} SecondaryTo
 */
EventStreamTransition.prototype['SecondaryTo'] = undefined;

/**
 * 
 * @member {Number} Count
 */
EventStreamTransition.prototype['Count'] = undefined;

/**
 * 
 * @member {Boolean} IsPrediction
 */
EventStreamTransition.prototype['IsPrediction'] = undefined;






export default EventStreamTransition;

